env: {}
image:
  pullPolicy: IfNotPresent
  repository: nodered/node-red
  tag: latest
persistence:
  data:
    emptyDir: false
    enabled: true
    mountPath: /data
    storageClass: nfs
    accessMode: ReadWriteOnce
    size: 5Gi
service:
  port:
    port: 1880
strategy:
  type: Recreate
hostNetwork: true
timezone: "Europe/Zurich"

ingress:
  enabled: true
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  labels: {}
  hosts:
    - host: nodered.192.168.1.220.nip.io
      paths:
        - path: /
          # Ignored if not kubeVersion >= 1.14-0
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  additionalIngresses: []
  # - enabled: false
  #   nameSuffix: "api"
  #   annotations: {}
  #   # kubernetes.io/ingress.class: nginx
  #   # kubernetes.io/tls-acme: "true"
  #   labels: {}
  #   hosts:
  #     - host: chart-example.local
  #       paths:
  #         - path: /api
  #           # Ignored if not kubeVersion >= 1.14-0
  #           pathType: Prefix
  #   tls: []
  #   #  - secretName: chart-example-tls
  #   #    hosts:
  #   #      - chart-example.local

# When using hostNetwork make sure you set dnsPolicy to ClusterFirstWithHostNet
hostNetwork: true

dnsPolicy: ClusterFirstWithHostNet
